nodeSelector: &nodeSelector {}
tolerations: &tolerations []
podLabels: &podLabels {}

ingressClass: nginx

clusterIssuer:
  name: cluster-issuer
  acmeEmail: hello@nxtcoder17.me

cloudflareWildcardCert:
  enabled: false
  name: &cfCertName cf-wildcard-cert
  email: nxtcoder17@gmail.com
  secretRef:
    name: *cfCertName
    key: api-token
  domains:
    - '*.nxtcoder17.me'
    - 'nxtcoder17.me'

cert-manager:
  installCRDs: true

  extraArgs:
    - "--dns01-recursive-nameservers-only"
    - "--dns01-recursive-nameservers=1.1.1.1:53,8.8.8.8:53"

  tolerations: *tolerations
  nodeSelector: *nodeSelector

  podLabels: *podLabels

  resources:
    limits:
      cpu: 80m
      memory: 120Mi
    requests:
      cpu: 40m
      memory: 120Mi

  webhook:
    podLabels: *podLabels
    resources:
      limits:
        cpu: 60m
        memory: 60Mi
      requests:
        cpu: 30m
        memory: 60Mi

  cainjector:
    podLabels: *podLabels
    resources:
      limits:
        cpu: 120m
        memory: 200Mi
      requests:
        cpu: 80m
        memory: 200Mi

ingress-nginx:
  nameOverride: ingress
  rbac:
    create: true

  serviceAccount:
    create: true

  controller:
    kind: DaemonSet
    hostNetwork: true
    hostPort:
      enabled: true
      ports:
        http: 80
        https: 443
        healthz: 10254

    dnsPolicy: ClusterFirstWithHostNet

    ingressClassByName: true
    ingressClass: nginx
    electionID: nginx
    ingressClassResource:
      enabled: true
      name: "nginx"
      controllerValue: "k8s.io/nginx"

    service:
      type: "ClusterIP"

    extraArgs:
      default-ssl-certificate: "helm-minimal-k8s/cf-wildcard-cert"

    resources:
      requests:
        cpu: 100m
        memory: 200Mi

    nodeSelector: *nodeSelector

    tolerations: *tolerations

    admissionWebhooks:
      enabled: false
      failurePolicy: Ignore

